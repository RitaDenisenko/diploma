package GitTools.GitRepoAnalysis;

import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.InputStream;
import java.io.LineNumberReader;

public class App 
{		
	
	
    public static void main( String[] args ) throws Exception
    {
    	GitRepositoryAnalysisTools g = new GitRepositoryAnalysisTools();
    	File repository = new File("C:/Users/MiPro/LetsDoStuff5");
    	System.out.println(repository.getAbsolutePath());
    	//g.calculateTotalUnknownLinesPercent(repository);

    	InputStream is = new BufferedInputStream(new FileInputStream("C:\\Users\\MiPro\\LetsDoStuff5\\LdsContext.cs"));
        try {
            byte[] c = new byte[1024];

            int readChars = is.read(c);
            if (readChars == -1) {
                // bail out if nothing to read
                System.out.println(0);
            }

            // make it easy for the optimizer to tune this loop
            int count = 0;
            while (readChars == 1024) {
                for (int i=0; i<1024;) {
                    if (c[i++] == '\n') {
                        ++count;
                    }
                }
                readChars = is.read(c);
            }

            // count remaining characters
            while (readChars != -1) {
                System.out.println(readChars);
                for (int i=0; i<readChars; ++i) {
                    if (c[i] == '\n') {
                        ++count;
                    }
                }
                readChars = is.read(c);
            }

            System.out.println(count == 0 ? 1 : count);
        } finally {
            is.close();
        }
    	//GitRepositoryAnalysisTools.countLinesNew("C:\\Users\\MiPro\\LetsDoStuff5\\COMMIT_EDITMSG");
    	
    	//GitRepository gr = new GitRepository();
    	//gr.init(repository.getAbsolutePath());
    	
    }
}
