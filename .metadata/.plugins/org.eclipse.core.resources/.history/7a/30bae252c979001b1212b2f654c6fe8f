package GitTools.GitRepoAnalysis;

import java.io.File;
import java.io.IOException;
import java.text.MessageFormat;

import org.eclipse.jgit.api.BlameCommand;
import org.eclipse.jgit.api.errors.GitAPIException;
import org.eclipse.jgit.blame.BlameResult;
import org.eclipse.jgit.lib.Ref;
import org.eclipse.jgit.lib.Repository;
import org.eclipse.jgit.storage.file.FileRepositoryBuilder;

public class App 
{	
	/**
	 * Get the git-blame information for entire file
	 *
	 * @param filePath
	 * @return
	 * @throws CommandException
	 */
	public BlameResult getBlameResultForFile(String filePath) throws CommandException {

	    logger.debug("getBlameResultForFile: {}", filePath);
	    try {
	        BlameCommand blamer = new BlameCommand(jgitRepository);
	        ObjectId commitID = jgitRepository.resolve("HEAD");
	        blamer.setStartCommit(commitID);
	        blamer.setFilePath(filePath);
	        BlameResult blame = blamer.call();

	        return blame;
	    } catch (GitAPIException | IOException e) {
	        String msg = MessageFormat.format("Can't get blame result for file: {0}", filePath);
	        logger.error(msg, e);
	        throw new CommandException(msg, e);
	    }
	}
	
    public static void main( String[] args ) throws IOException
    {
    	
		Repository repo = new FileRepositoryBuilder()
				    .setGitDir(new File("my_repo/.git"))
				    .build();
  	
    	Ref master = repo.getRef("master");
    }
}
