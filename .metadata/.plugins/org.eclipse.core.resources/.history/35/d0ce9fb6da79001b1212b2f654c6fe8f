package GitTools.GitRepoAnalysis;

import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.text.MessageFormat;

import org.eclipse.jgit.api.BlameCommand;
import org.eclipse.jgit.api.errors.GitAPIException;
import org.eclipse.jgit.blame.BlameGenerator;
import org.eclipse.jgit.blame.BlameResult;
import org.eclipse.jgit.diff.RawText;
import org.eclipse.jgit.lib.AnyObjectId;
import org.eclipse.jgit.lib.ObjectId;
import org.eclipse.jgit.lib.PersonIdent;
import org.eclipse.jgit.lib.Ref;
import org.eclipse.jgit.lib.Repository;
import org.eclipse.jgit.revwalk.RevCommit;
import org.eclipse.jgit.revwalk.RevWalk;
import org.eclipse.jgit.storage.file.FileRepositoryBuilder;
import org.eclipse.jgit.util.IO;

public class App 
{	
	/**
	 * Get the git-blame information for entire file
	 *
	 * @param filePath
	 * @return
	 * @throws CommandException
	 */
	/*public static BlameResult getBlameResultForFile(String filePath) throws Exception {

	    //logger.debug("getBlameResultForFile: {}", filePath);
	    try {
			Repository jgitRepository = new FileRepositoryBuilder()
				    .setGitDir(new File("C:/Users/MiPro/Computer-graphics"))
				    .build();
	        BlameCommand blamer = new BlameCommand(jgitRepository);
	        ObjectId commitID = jgitRepository.resolve("HEAD");
	        //ObjectId commitID = ObjectId.fromString( "" );
	        blamer.setStartCommit(commitID);
	        blamer.setFilePath(filePath);
	        BlameResult blame = blamer.call();

	        return blame;
	    } catch (GitAPIException | IOException e) {
	        String msg = MessageFormat.format("Can't get blame result for file: {0}", filePath);
	        //logger.error(msg, e);
	        throw new Exception(msg, e);
	    }
	}*/
	
	
    public static void main( String[] args ) throws Exception
    {
    	GitRepository gr = new GitRepository();
    	gr.init("C:/Users/MiPro/Computer-graphics");
    	BlameResult br = gr.getBlameResultForFile("lab1/lab1.0.py");
    	int i = 0;
    	while (br.getSourceCommitter(i) != null)
    	{
    		System.out.println(br.getSourceCommitter(i).getName());
    		i++;
    	}
    	
    
    }
}
