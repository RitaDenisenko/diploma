<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<link type="text/css" rel="stylesheet"  href="css/styles.css"></link>
  </head>
  <body>
  <script src="https://d3js.org/d3.v3.min.js"></script>
  <h:form>
		<h3>Repository info</h3>
		<h:panelGrid columns="2" border="0">
        	<h:outputText value="Репозиторий"/>
        	<h:inputText value="#{Repo.link}" />
        </h:panelGrid>
        <h:commandButton value="Построить график" action="#{Repo.calculateAll}"/>  
        <br/>
        <br/>
        <br/>

        <h:inputHidden value="#{Repo.resultData}" id="hiddenId" />
        <h:outputScript name="js/d3.min.js"/>
        <h:outputScript name="js/jquery.min.js"/>
		 <h:outputScript>
var svg, group;


var JSONItems = JSON.parse(document.getElementById("j_idt4:hiddenId").value);

(function(){
  svg = d3.select('body').append('svg').attr('width', window.innerWidth).attr('height',window.innerHeight);
  group = svg.append('g');
  createTreemap(JSONItems);
})();


function createTreemap(JSONItems) {
  
  var root = d3.hierarchy(JSONItems);

var treemapLayout = d3.treemap()
  .size([1000, 800])
  .paddingOuter(25);;

var root = d3.hierarchy(JSONItems);

root.sum(function(d) {
  return d.value;
});

treemapLayout(root);

d3.select('svg g')
  .selectAll('rect')
  .data(root.descendants())
  .enter()
  .append('rect')
  .attr('x', function(d) { return d.x0; })
  .attr('y', function(d) { return d.y0; })
  .attr('width', function(d) { return d.x1 - d.x0; })
  .attr('height', function(d) { return d.y1 - d.y0; })
  .style("stroke", "black")
  .style("fill", function(d){ if(d.data.name.slice(-1) == 0) return "#FF0033"; if (d.data.name.slice(-1) == 1) return "#FFFF55"; return "#99FF33";} );
  

        
svg
    .selectAll("vals")
    .data(root.leaves())
    .enter()
    .append("title")
    .text(function(d) { return d.data.name; });      
 

 
  
}
		</h:outputScript>
		
		<ui:repeat value="#{Repo.dataForEachPerson}" var="personData" varStatus="myVarStatus">
    	
    	<h:inputHidden value="#{personData}" id="hiddenId1" />
    	<h:outputScript>
        	
        	 var margin = {
            top: 60,
            right: 25,
            bottom: 15,
            left: 60
        };
        	
        	var dataArray = JSON.parse(document.getElementById("j_idt4:j_idt15:#{myVarStatus.index}:hiddenId1").value);
        	
 			var svg = d3.select("body").append("svg")
          .attr("height","80%")
          .attr("width","80%");

svg.selectAll("rect")
    .data(dataArray)
    .enter().append("rect")
          .attr("class", "bar")
          .attr("height", function(d, i) {return (d.value * 5 + 500)})
          .attr("width","40")
          .attr("x", function(d, i) {return (i * 60) + 25})
          .attr("y", function(d, i) {return 200 - d.value });

svg.selectAll("vals")
    .data(dataArray)
    .enter().append("title")
    .text(function(d) {return d.title;});  

    

        	
        </h:outputScript>
</ui:repeat>
		

		
		
		<h:dataTable id="membersTable" value="#{Repo.peopleKnowing}"
			var="personKnowsIn" styleClass="membersTable" headerClass="membersTableHeader"
			rowClasses="membersTableOddRow, membersTableEvenRow">

			<h:column>
				<f:facet name="header">Участник проекта</f:facet>
				<h:outputText value="#{personKnowsIn.person}" size="80"/>
			</h:column>
			<h:column>
				<f:facet name="header">Файл или папка</f:facet>
				<h:outputText value="#{personKnowsIn.path}" size="80"/>
			</h:column>

			<h:column>
				<f:facet name="header">Процент</f:facet>
				<h:outputText value="#{personKnowsIn.percent}" size="20"/>
			</h:column>

		</h:dataTable>
    </h:form>
  

</body>
</html>